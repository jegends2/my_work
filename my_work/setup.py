from setuptools import find_packages
from setuptools import setup

package_name = 'my_work'

setup(
    name=package_name,
    version='2.1.5',
    packages=find_packages(include=[package_name, f'{package_name}.script']),
    install_requires=[
        'setuptools',
        'fields2cover',
        'matplotlib',
    ],
    zip_safe=True,
    author='Darby Lim',
    author_email='thlim@robotis.com',
    maintainer='Will Son',
    maintainer_email='willson@robotis.com',
    keywords=['ROS'],
    classifiers=[
        'Intended Audience :: Developers',
        'License :: OSI Approved :: Apache Software License',
        'Programming Language :: Python',
        'Topic :: Software Development',
    ],
    description=(
        'Teleoperation node using keyboard for TurtleBot3.'
    ),
    license='Apache License, Version 2.0',
    tests_require=['pytest'],
    entry_points={
        'console_scripts': [
            'navigate_waypoints = my_work.script.navigate_waypoints:main',
            'waypoints_insert = my_work.script.waypoints_insert:main',
            'square_goal_sender = my_work.script.square_goal_sender:main',
            'coordinate_vizualizer = my_work.script.coordinate_visualizer:main',
            'goal_sender = my_work.script.goal_sender:main',
            'visual_sender = my_work.script.visual_sender:main',
            'map_box_test = my_work.script.map_box_test:main',
            'stop = my_work.script.stop:main',
            'gridnavi = my_work.script.gridnavi:main',
            'box_map_grid = my_work.script.box_map_grid:main',
            'station_grid = my_work.script.station_grid:main',
            'map_filtering = my_work.script.map_filtering:main',
            'navigate_station = my_work.script.navigate_station:main',
            'outer_navi = my_work.script.outer_navi:main',
            'map_black = my_work.script.map_black:main',
            'black_grid = my_work.script.black_grid:main',
            'black_navi = my_work.script.black_navi:main',
            'path_generator = my_work.script.path_generator:main',
            'nabi = my_work.script.nabi:main',
            'grid_layer = my_work.script.grid_layer:main',
            'main_cjg = my_work.script.main_cjg:main',
            'return_station = my_work.script.return_station:main',
            'wall_navi = my_work.script.wall_navi:main',
            'main_cjg_world = my_work.script.main_cjg_world:main',
            'wall_navi_world = my_work.script.wall_navi_world:main',
            'return_station_world = my_work.script.return_station_world:main',
            'action_client = my_work.script.action_client:main',
            'enter_house_world = my_work.script.enter_house_world:main',
            'wall_follow_open = my_work.script.wall_follow_open:main',
            'robot_state_estimate = my_work.script.robot_state_estimate:main',
            'following_waypoints_wall = my_work.script.following_waypoints_wall:main',
            'maintain_dist = my_work.script.maintain_dist:main',
            'shrink_point = my_work.script.shrink_point:main',
            'show_wall_points = my_work.script.show_wall_points:main',
            'polygon = my_work.script.polygon:main',
            'path_follower = my_work.script.path_follower:main',
            'coverage_planner = my_work.script.coverage_planner:main',
            'plan_to_turtlebot3 = my_work.script.plan_to_turtlebot3:main',
            'fieldsmove = my_work.script.fieldsmove:main',
            'fieldspathplan = my_work.script.fieldspathplan:main',
            'fieldsmapextract = my_work.script.fieldsmapextract:main',
            'fields2coverpart1 = my_work.script.fields2coverpart1:main',
            'fields2coverpart1_practice = my_work.script.fields2coverpart1_practice:main',
            'fields2coverpart2 = my_work.script.fields2coverpart2:main',
            'fields2coverpart2_practice = my_work.script.fields2coverpart2_practice:main',
            'fields2coverpart3 = my_work.script.fields2coverpart3:main',
            'fields2coverpart3_practice = my_work.script.fields2coverpart3_practice:main',
           # 'field_extraction = my_work.script.field_extraction:main',
            'gcm_to_xml = my_work.script.gcm_to_xml:main',
            'check_xml = my_work.script.check_xml:main',
            'transform_to_utm = my_work.script.transform_to_utm:main',
            'create_path = my_work.script.create_path:main',
            'move_back_to_prev_crs = my_work.script.move_back_to_prev_crs:main',
            'polygon_visualizer = my_work.script.polygon_visualizer:main',
            'pgm_to_costmap_coordinates = my_work.script.pgm_to_costmap_coordinates:main',
            'swath_path_publisher = my_work.script.swath_path_publisher:main',
            'opencvheadlandpath = my_work.script.opencvheadlandpath:main',
            'headlandpathfollow = my_work.script.headlandpathfollow:main',
            'opencvcellwithmidpoint = my_work.script.opencvcellwithmidpoint:main',
            'cellmidpointvisual = my_work.script.cellmidpointvisual:main',
            'cellmidpointfollow = my_work.script.cellmidpointfollow:main',
            'cellmidpoint_rviz = my_work.script.cellmidpoint_rviz:main',
            'cellmidpointclicker = my_work.script.cellmidpointclicker:main',
            'cellmidpointrvizclicker = my_work.script.cellmidpointrvizclicker:main',
            'test = my_work.script.test:main',
            'initialposetest = my_work.script.initialposetest:main',
            'scanimg = my_work.script.scanimg:main',
            'scannewtop = my_work.script.scannewtop:main',
            'givingcmdvel = my_work.script.givingcmdvel:main',
            'navpath = my_work.script.navpath:main',
            'followclickedpoints = my_work.script.followclickedpoints:main',
            'initposemaker = my_work.script.initposemaker:main',
            'testfollclickinput = my_work.script.testfollclickinput:main',
            'rscamera = my_work.script.rscamera:main',
            'pgmtopath = my_work.script.pgmtopath:main',
            'visfinalpath = my_work.script.visfinalpath:main',
        ],
    },
)

